<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>PERI Jump & Run</title>
  <style>
    body { margin: 0; overflow: hidden; background: #87ceeb; }
    canvas { display: block; }
  </style>
</head>
<body>
  <canvas id="gameCanvas"></canvas>
  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const gravity = 0.5;

    const player = {
      x: 100,
      y: canvas.height - 150,
      width: 50,
      height: 60,
      velY: 0,
      jumping: false,
    };

    const platforms = [];
    const obstacles = [];
    let scrollOffset = 0;

    function drawPlayer() {
      ctx.fillStyle = "black";
      ctx.fillRect(player.x, player.y, player.width, player.height);
      ctx.fillStyle = "white";
      ctx.font = "20px Arial";
      ctx.fillText("PERI", player.x + 5, player.y + 25);
      ctx.beginPath();
      ctx.arc(player.x + 10, player.y + player.height, 5, 0, Math.PI * 2);
      ctx.arc(player.x + player.width - 10, player.y + player.height, 5, 0, Math.PI * 2);
      ctx.fill();
    }

    function createPlatform(x, y, width = 100, height = 20) {
      return { x, y, width, height };
    }

    function createObstacle(x, y, size = 30) {
      return { x, y, width: size, height: size };
    }

    function generateWorld(offset) {
      // Add platforms
      for (let i = 0; i < 3; i++) {
        let x = offset + Math.random() * 600 + 300;
        let y = canvas.height - Math.random() * 300 - 100;
        platforms.push(createPlatform(x, y));
      }
      // Add obstacle
      if (Math.random() > 0.5) {
        let x = offset + Math.random() * 800 + 300;
        let y = canvas.height - 40;
        obstacles.push(createObstacle(x, y));
      }
    }

    function drawPlatforms() {
      ctx.fillStyle = "#654321";
      platforms.forEach(p => {
        ctx.fillRect(p.x - scrollOffset, p.y, p.width, p.height);
      });
    }

    function drawObstacles() {
      ctx.fillStyle = "red";
      obstacles.forEach(o => {
        ctx.fillRect(o.x - scrollOffset, o.y, o.width, o.height);
      });
    }

    function update() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Auto-scroll
      scrollOffset += 2;

      // Add more world
      if (scrollOffset % 800 === 0) {
        generateWorld(scrollOffset + canvas.width);
      }

      // Apply gravity
      if (player.y + player.height < canvas.height) {
        player.velY += gravity;
      } else {
        player.velY = 0;
        player.jumping = false;
        player.y = canvas.height - player.height;
      }

      // Platform collision
      platforms.forEach(p => {
        if (
          player.x + player.width > p.x - scrollOffset &&
          player.x < p.x - scrollOffset + p.width &&
          player.y + player.height > p.y &&
          player.y + player.height < p.y + p.height &&
          player.velY >= 0
        ) {
          player.jumping = false;
          player.velY = 0;
          player.y = p.y - player.height;
        }
      });

      // Move player
      player.y += player.velY;

      drawPlayer();
      drawPlatforms();
      drawObstacles();

      requestAnimationFrame(update);
    }

    window.addEventListener("keydown", (e) => {
      if (e.code === "Space" && !player.jumping) {
        player.velY = -12;
        player.jumping = true;
      }
    });

    generateWorld(0);
    update();
  </script>
</body>
</html>
